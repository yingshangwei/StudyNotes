
a:     file format elf64-x86-64
a
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x00000000000005b0

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r--
  INTERP off    0x0000000000000238 vaddr 0x0000000000000238 paddr 0x0000000000000238 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**21
         filesz 0x00000000000008e0 memsz 0x00000000000008e0 flags r-x
    LOAD off    0x0000000000000db0 vaddr 0x0000000000200db0 paddr 0x0000000000200db0 align 2**21
         filesz 0x0000000000000270 memsz 0x0000000000000278 flags rw-
 DYNAMIC off    0x0000000000000dc0 vaddr 0x0000000000200dc0 paddr 0x0000000000200dc0 align 2**3
         filesz 0x00000000000001f0 memsz 0x00000000000001f0 flags rw-
    NOTE off    0x0000000000000254 vaddr 0x0000000000000254 paddr 0x0000000000000254 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x000000000000079c vaddr 0x000000000000079c paddr 0x000000000000079c align 2**2
         filesz 0x000000000000003c memsz 0x000000000000003c flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000000db0 vaddr 0x0000000000200db0 paddr 0x0000000000200db0 align 2**0
         filesz 0x0000000000000250 memsz 0x0000000000000250 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x0000000000000558
  FINI                 0x0000000000000774
  INIT_ARRAY           0x0000000000200db0
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000200db8
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000000298
  STRTAB               0x0000000000000378
  SYMTAB               0x00000000000002b8
  STRSZ                0x0000000000000089
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000200fb0
  PLTRELSZ             0x0000000000000030
  PLTREL               0x0000000000000007
  JMPREL               0x0000000000000528
  RELA                 0x0000000000000438
  RELASZ               0x00000000000000f0
  RELAENT              0x0000000000000018
  FLAGS                0x0000000000000008
  FLAGS_1              0x0000000008000001
  VERNEED              0x0000000000000418
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x0000000000000402
  RELACOUNT            0x0000000000000005

Version References:
  required from libc.so.6:
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000000238  0000000000000238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000000254  0000000000000254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000000274  0000000000000274  00000274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000001c  0000000000000298  0000000000000298  00000298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       000000c0  00000000000002b8  00000000000002b8  000002b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000089  0000000000000378  0000000000000378  00000378  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000010  0000000000000402  0000000000000402  00000402  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  0000000000000418  0000000000000418  00000418  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     000000f0  0000000000000438  0000000000000438  00000438  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     00000030  0000000000000528  0000000000000528  00000528  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000017  0000000000000558  0000000000000558  00000558  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000030  0000000000000570  0000000000000570  00000570  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  00000000000005a0  00000000000005a0  000005a0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         000001c2  00000000000005b0  00000000000005b0  000005b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000009  0000000000000774  0000000000000774  00000774  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       00000019  0000000000000780  0000000000000780  00000780  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 0000003c  000000000000079c  000000000000079c  0000079c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     00000108  00000000000007d8  00000000000007d8  000007d8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000008  0000000000200db0  0000000000200db0  00000db0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000008  0000000000200db8  0000000000200db8  00000db8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000001f0  0000000000200dc0  0000000000200dc0  00000dc0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000050  0000000000200fb0  0000000000200fb0  00000fb0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .data         00000020  0000000000201000  0000000000201000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .bss          00000008  0000000000201020  0000000000201020  00001020  2**0
                  ALLOC
 24 .comment      00000029  0000000000000000  0000000000000000  00001020  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
0000000000000238 l    d  .interp	0000000000000000              .interp
0000000000000254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000000274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000000298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000000002b8 l    d  .dynsym	0000000000000000              .dynsym
0000000000000378 l    d  .dynstr	0000000000000000              .dynstr
0000000000000402 l    d  .gnu.version	0000000000000000              .gnu.version
0000000000000418 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000000438 l    d  .rela.dyn	0000000000000000              .rela.dyn
0000000000000528 l    d  .rela.plt	0000000000000000              .rela.plt
0000000000000558 l    d  .init	0000000000000000              .init
0000000000000570 l    d  .plt	0000000000000000              .plt
00000000000005a0 l    d  .plt.got	0000000000000000              .plt.got
00000000000005b0 l    d  .text	0000000000000000              .text
0000000000000774 l    d  .fini	0000000000000000              .fini
0000000000000780 l    d  .rodata	0000000000000000              .rodata
000000000000079c l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
00000000000007d8 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000200db0 l    d  .init_array	0000000000000000              .init_array
0000000000200db8 l    d  .fini_array	0000000000000000              .fini_array
0000000000200dc0 l    d  .dynamic	0000000000000000              .dynamic
0000000000200fb0 l    d  .got	0000000000000000              .got
0000000000201000 l    d  .data	0000000000000000              .data
0000000000201020 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000000005e0 l     F .text	0000000000000000              deregister_tm_clones
0000000000000620 l     F .text	0000000000000000              register_tm_clones
0000000000000670 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000201020 l     O .bss	0000000000000001              completed.7698
0000000000200db8 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
00000000000006b0 l     F .text	0000000000000000              frame_dummy
0000000000200db0 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              a.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000000008dc l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000200db8 l       .init_array	0000000000000000              __init_array_end
0000000000200dc0 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000200db0 l       .init_array	0000000000000000              __init_array_start
000000000000079c l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000200fb0 l     O .got	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000000770 g     F .text	0000000000000002              __libc_csu_fini
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000201000  w      .data	0000000000000000              data_start
0000000000000000       F *UND*	0000000000000000              puts@@GLIBC_2.2.5
0000000000201020 g       .data	0000000000000000              _edata
0000000000201018 g     O .data	0000000000000008              p2
0000000000000774 g     F .fini	0000000000000000              _fini
0000000000000000       F *UND*	0000000000000000              printf@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000201000 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000201008 g     O .data	0000000000000000              .hidden __dso_handle
0000000000000780 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000000700 g     F .text	0000000000000065              __libc_csu_init
0000000000201028 g       .bss	0000000000000000              _end
00000000000005b0 g     F .text	000000000000002b              _start
0000000000201020 g       .bss	0000000000000000              __bss_start
00000000000006ba g     F .text	0000000000000042              main
0000000000201010 g     O .data	0000000000000008              p1
0000000000201020 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@@GLIBC_2.2.5
0000000000000558 g     F .init	0000000000000000              _init



Disassembly of section .init:

0000000000000558 <_init>:
 558:	48 83 ec 08          	sub    $0x8,%rsp
 55c:	48 8b 05 85 0a 20 00 	mov    0x200a85(%rip),%rax        # 200fe8 <__gmon_start__>
 563:	48 85 c0             	test   %rax,%rax
 566:	74 02                	je     56a <_init+0x12>
 568:	ff d0                	callq  *%rax
 56a:	48 83 c4 08          	add    $0x8,%rsp
 56e:	c3                   	retq   

Disassembly of section .plt:

0000000000000570 <.plt>:
 570:	ff 35 42 0a 20 00    	pushq  0x200a42(%rip)        # 200fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
 576:	ff 25 44 0a 20 00    	jmpq   *0x200a44(%rip)        # 200fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
 57c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000580 <puts@plt>:
 580:	ff 25 42 0a 20 00    	jmpq   *0x200a42(%rip)        # 200fc8 <puts@GLIBC_2.2.5>
 586:	68 00 00 00 00       	pushq  $0x0
 58b:	e9 e0 ff ff ff       	jmpq   570 <.plt>

0000000000000590 <printf@plt>:
 590:	ff 25 3a 0a 20 00    	jmpq   *0x200a3a(%rip)        # 200fd0 <printf@GLIBC_2.2.5>
 596:	68 01 00 00 00       	pushq  $0x1
 59b:	e9 d0 ff ff ff       	jmpq   570 <.plt>

Disassembly of section .plt.got:

00000000000005a0 <__cxa_finalize@plt>:
 5a0:	ff 25 52 0a 20 00    	jmpq   *0x200a52(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 5a6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000005b0 <_start>:
 5b0:	31 ed                	xor    %ebp,%ebp
 5b2:	49 89 d1             	mov    %rdx,%r9
 5b5:	5e                   	pop    %rsi
 5b6:	48 89 e2             	mov    %rsp,%rdx
 5b9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 5bd:	50                   	push   %rax
 5be:	54                   	push   %rsp
 5bf:	4c 8d 05 aa 01 00 00 	lea    0x1aa(%rip),%r8        # 770 <__libc_csu_fini>
 5c6:	48 8d 0d 33 01 00 00 	lea    0x133(%rip),%rcx        # 700 <__libc_csu_init>
 5cd:	48 8d 3d e6 00 00 00 	lea    0xe6(%rip),%rdi        # 6ba <main>
 5d4:	ff 15 06 0a 20 00    	callq  *0x200a06(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 5da:	f4                   	hlt    
 5db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000005e0 <deregister_tm_clones>:
 5e0:	48 8d 3d 39 0a 20 00 	lea    0x200a39(%rip),%rdi        # 201020 <__TMC_END__>
 5e7:	55                   	push   %rbp
 5e8:	48 8d 05 31 0a 20 00 	lea    0x200a31(%rip),%rax        # 201020 <__TMC_END__>
 5ef:	48 39 f8             	cmp    %rdi,%rax
 5f2:	48 89 e5             	mov    %rsp,%rbp
 5f5:	74 19                	je     610 <deregister_tm_clones+0x30>
 5f7:	48 8b 05 da 09 20 00 	mov    0x2009da(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 5fe:	48 85 c0             	test   %rax,%rax
 601:	74 0d                	je     610 <deregister_tm_clones+0x30>
 603:	5d                   	pop    %rbp
 604:	ff e0                	jmpq   *%rax
 606:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 60d:	00 00 00 
 610:	5d                   	pop    %rbp
 611:	c3                   	retq   
 612:	0f 1f 40 00          	nopl   0x0(%rax)
 616:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 61d:	00 00 00 

0000000000000620 <register_tm_clones>:
 620:	48 8d 3d f9 09 20 00 	lea    0x2009f9(%rip),%rdi        # 201020 <__TMC_END__>
 627:	48 8d 35 f2 09 20 00 	lea    0x2009f2(%rip),%rsi        # 201020 <__TMC_END__>
 62e:	55                   	push   %rbp
 62f:	48 29 fe             	sub    %rdi,%rsi
 632:	48 89 e5             	mov    %rsp,%rbp
 635:	48 c1 fe 03          	sar    $0x3,%rsi
 639:	48 89 f0             	mov    %rsi,%rax
 63c:	48 c1 e8 3f          	shr    $0x3f,%rax
 640:	48 01 c6             	add    %rax,%rsi
 643:	48 d1 fe             	sar    %rsi
 646:	74 18                	je     660 <register_tm_clones+0x40>
 648:	48 8b 05 a1 09 20 00 	mov    0x2009a1(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 64f:	48 85 c0             	test   %rax,%rax
 652:	74 0c                	je     660 <register_tm_clones+0x40>
 654:	5d                   	pop    %rbp
 655:	ff e0                	jmpq   *%rax
 657:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 65e:	00 00 
 660:	5d                   	pop    %rbp
 661:	c3                   	retq   
 662:	0f 1f 40 00          	nopl   0x0(%rax)
 666:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 66d:	00 00 00 

0000000000000670 <__do_global_dtors_aux>:
 670:	80 3d a9 09 20 00 00 	cmpb   $0x0,0x2009a9(%rip)        # 201020 <__TMC_END__>
 677:	75 2f                	jne    6a8 <__do_global_dtors_aux+0x38>
 679:	48 83 3d 77 09 20 00 	cmpq   $0x0,0x200977(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 680:	00 
 681:	55                   	push   %rbp
 682:	48 89 e5             	mov    %rsp,%rbp
 685:	74 0c                	je     693 <__do_global_dtors_aux+0x23>
 687:	48 8b 3d 7a 09 20 00 	mov    0x20097a(%rip),%rdi        # 201008 <__dso_handle>
 68e:	e8 0d ff ff ff       	callq  5a0 <__cxa_finalize@plt>
 693:	e8 48 ff ff ff       	callq  5e0 <deregister_tm_clones>
 698:	c6 05 81 09 20 00 01 	movb   $0x1,0x200981(%rip)        # 201020 <__TMC_END__>
 69f:	5d                   	pop    %rbp
 6a0:	c3                   	retq   
 6a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 6a8:	f3 c3                	repz retq 
 6aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000006b0 <frame_dummy>:
 6b0:	55                   	push   %rbp
 6b1:	48 89 e5             	mov    %rsp,%rbp
 6b4:	5d                   	pop    %rbp
 6b5:	e9 66 ff ff ff       	jmpq   620 <register_tm_clones>

00000000000006ba <main>:
 6ba:	55                   	push   %rbp
 6bb:	48 89 e5             	mov    %rsp,%rbp
 6be:	48 8b 05 4b 09 20 00 	mov    0x20094b(%rip),%rax        # 201010 <p1>
 6c5:	48 89 c6             	mov    %rax,%rsi
 6c8:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 790 <_IO_stdin_used+0x10>
 6cf:	b8 00 00 00 00       	mov    $0x0,%eax
 6d4:	e8 b7 fe ff ff       	callq  590 <printf@plt>
 6d9:	48 8b 05 30 09 20 00 	mov    0x200930(%rip),%rax        # 201010 <p1>
 6e0:	48 89 c7             	mov    %rax,%rdi
 6e3:	e8 98 fe ff ff       	callq  580 <puts@plt>
 6e8:	cd 80                	int    $0x80
 6ea:	48 8b 05 27 09 20 00 	mov    0x200927(%rip),%rax        # 201018 <p2>
 6f1:	48 89 c7             	mov    %rax,%rdi
 6f4:	e8 87 fe ff ff       	callq  580 <puts@plt>
 6f9:	90                   	nop
 6fa:	5d                   	pop    %rbp
 6fb:	c3                   	retq   
 6fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000700 <__libc_csu_init>:
 700:	41 57                	push   %r15
 702:	41 56                	push   %r14
 704:	49 89 d7             	mov    %rdx,%r15
 707:	41 55                	push   %r13
 709:	41 54                	push   %r12
 70b:	4c 8d 25 9e 06 20 00 	lea    0x20069e(%rip),%r12        # 200db0 <__frame_dummy_init_array_entry>
 712:	55                   	push   %rbp
 713:	48 8d 2d 9e 06 20 00 	lea    0x20069e(%rip),%rbp        # 200db8 <__init_array_end>
 71a:	53                   	push   %rbx
 71b:	41 89 fd             	mov    %edi,%r13d
 71e:	49 89 f6             	mov    %rsi,%r14
 721:	4c 29 e5             	sub    %r12,%rbp
 724:	48 83 ec 08          	sub    $0x8,%rsp
 728:	48 c1 fd 03          	sar    $0x3,%rbp
 72c:	e8 27 fe ff ff       	callq  558 <_init>
 731:	48 85 ed             	test   %rbp,%rbp
 734:	74 20                	je     756 <__libc_csu_init+0x56>
 736:	31 db                	xor    %ebx,%ebx
 738:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 73f:	00 
 740:	4c 89 fa             	mov    %r15,%rdx
 743:	4c 89 f6             	mov    %r14,%rsi
 746:	44 89 ef             	mov    %r13d,%edi
 749:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 74d:	48 83 c3 01          	add    $0x1,%rbx
 751:	48 39 dd             	cmp    %rbx,%rbp
 754:	75 ea                	jne    740 <__libc_csu_init+0x40>
 756:	48 83 c4 08          	add    $0x8,%rsp
 75a:	5b                   	pop    %rbx
 75b:	5d                   	pop    %rbp
 75c:	41 5c                	pop    %r12
 75e:	41 5d                	pop    %r13
 760:	41 5e                	pop    %r14
 762:	41 5f                	pop    %r15
 764:	c3                   	retq   
 765:	90                   	nop
 766:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 76d:	00 00 00 

0000000000000770 <__libc_csu_fini>:
 770:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000774 <_fini>:
 774:	48 83 ec 08          	sub    $0x8,%rsp
 778:	48 83 c4 08          	add    $0x8,%rsp
 77c:	c3                   	retq   
